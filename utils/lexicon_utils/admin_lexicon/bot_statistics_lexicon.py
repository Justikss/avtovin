from copy import copy

from utils.lexicon_utils.admin_lexicon.admin_lexicon import return_main_menu, captions, pagination_interface
from utils.lexicon_utils.admin_lexicon.advert_parameters_lexicon import advert_parameters_captions



statistic_captions = {'Day': '–î–µ–Ω—å',
                    'Week': '–ù–µ–¥–µ–ª—è',
                    'Month': '–ú–µ—Å—è—Ü',
                    'Year': '–ì–æ–¥',
                    'General': '–û–±—â–∞—è',
                      'color': '–¶–≤–µ—Ç',
                      'complectation': '–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—é',
                      'model': advert_parameters_captions['model'],#.lower(),
                      'brand': advert_parameters_captions['brand'],#.lower(),
                      'engine': advert_parameters_captions['engine'],#.lower(),
                    'top_demand_on': '–¢–æ–ø —Å–ø—Ä–æ—Å–∞ –Ω–∞',
                    'car': '–∞–≤—Ç–æ'
}

choose_period_keyboard = {'select_bot_statistic_period:day': statistic_captions['Day'],
                          'select_bot_statistic_period:week': statistic_captions['Week'],
                           'select_bot_statistic_period:month': statistic_captions['Month'],
                           'select_bot_statistic_period:year': statistic_captions['Year'],
                           'select_bot_statistic_period:all': statistic_captions['General']}

to_statistic_panel = {'admin_backward:to_statistic_panel': '–í –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏'}

__STATISTIC_LEXICON = {
    'stats_loading': '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Ä–∞—Å—á—ë—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...',
    'seller_statistic_view': {
    'message_text': "–ü—Ä–æ–¥–∞–≤–µ—Ü: {seller_name}\n–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {date_of_registration}\n\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period}:\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {adverts_count}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫–ª–∏–∫–æ–≤: {feedbacks_count}",
        'buttons': {'select_seller_statistic_period:day': statistic_captions['Day'],
                    'select_seller_statistic_period:week': statistic_captions['Week'],
                    'select_seller_statistic_period:month': statistic_captions['Month'],
                    'select_seller_statistic_period:year': statistic_captions['Year'],
                    'select_seller_statistic_period:all': statistic_captions['General'],
                    'admin_backward:check_seller_statistic_values': captions['backward'],
                    **return_main_menu, 'width': (3, 2, 1, 1)}},

    'choose_statistic_type': {
        'message_text': '–¢–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –±–æ—Ç—É:', 'buttons': {'general_statistics': '–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                                                               'demand_for_cars': '–°–ø—Ä–æ—Å –Ω–∞ –∞–≤—Ç–æ',
                                                               **return_main_menu,
                                                               'width': 1}
    },

    'general_bot_statistics': {'message_text': '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period}\n' + ('‚ñ¨' * 13) + '\nüî∏–û—Ç–∫–ª–∏–∫–æ–≤: {feedbacks}\nüì¢ –û–±—ä—è–≤–ª–µ–Ω–∏–π: {adverts}\
\nüßñ‚Äç‚ôÇÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ: {users}\nü§µüèª‚Äç‚ôÇÔ∏è –ü—Ä–æ–¥–∞–≤—Ü–æ–≤: {sellers}\nüë®üèª‚Äçüíª –ü–æ–∫—É–ø–∞—Ç–µ–ª–µ–π: {buyers}', 'buttons': {
                    **choose_period_keyboard,
                    'admin_backward:check_bot_statistic_values': captions['backward'],
                    **return_main_menu, 'width': (3, 2, 1, 1)}},

    'choose_statistics_output_method': {'message_text': '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', 'buttons': {
        'output_method:top_ten': '–¢–æ–ø 10', 'output_method:individual': '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ',
        'admin_backward:statistics_output_method': captions['backward'],
        **to_statistic_panel,
        'width': 2
    }},
    'choose_method_of_calculating': {'message_text': '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–ø—Ä–æ—Å–∞:', 'buttons': {
        'calculate_method:top': '–í—ã—Å—à–∏–π —Å–ø—Ä–æ—Å', 'calculate_method:bottom': '–ù–∏–∑—à–∏–π —Å–ø—Ä–æ—Å',
        'admin_backward:method_of_calculate': captions['backward'],
        **to_statistic_panel,
        'width': 2
    }},

    # 'period_of_calculate_demand_statistics': {'message_text': '–ü–µ—Ä–∏–æ–¥ —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', 'buttons': {
    #     **choose_period_keyboard,
    #     'admin_backward:period_of_calcul_demand_stats': captions['backward'],
    #     **to_statistic_panel,
    #     'width': (3, 2, 1, 1)
    # }},
    'top_ten_message_text':  '–ú–µ—Å—Ç–æ –≤ —Ç–æ–ø–µ: {top_position}{parameters}\n\n–°–∞–º—ã–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–¥–∞–≤–µ—Ü —ç—Ç–æ–π –º–∞—à–∏–Ω—ã:\n<blockquote>{seller_entity}</blockquote>\n' \
                        + ('‚ñ¨' * 13) + '\n–ú–∞—à–∏–Ω—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã —Å–≤–æ–∏–º –º–µ—Å—Ç–æ–º –≤ —Ç–æ–ø–µ:',

    'custom_params_period': {'message_text': '–ü–µ—Ä–∏–æ–¥ —Ä–∞—Å—á—ë—Ç–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–ø—Ä–æ—Å–∞:',
                             'buttons': {
                                 **choose_period_keyboard,
                                 'admin_backward:custom_params_period': captions['backward'],
                                 **to_statistic_panel,
                                 'width': 3
                             }},

    'review_custom_stats_branches': {'message_text': '', 'buttons': {
        **pagination_interface,
        'admin_backward:choose_custom_params': captions['backward'],
        **to_statistic_panel,
        'width': 3
    }}
}

class SelectCustomParamsProcess:
    message_text = '–¢–æ–ø —Å–ø—Ä–æ—Å–∞ –Ω–∞ {object_entity}\n–∑–∞ {period}\n–°–ø–∏—Å–æ–∫ –ø–æ —É–±—ã–≤–∞–Ω–∏—é –æ—Ç —Å–∞–º–æ–π {popular_state} {param_type}:'
    width = 1
    backward_buttons = {'admin_backward:select_custom_params': captions['backward'], **to_statistic_panel}
    buttons_callback_data = 'bot_statistic_param:'

    output_current_top_buttons = {'output_current_top': '–í—ã–≤–µ—Å—Ç–∏ —Ç–µ–∫—É—â–∏–π —Ç–æ–ø'}


class TopTenDisplay:
    buttons_callback_data = 'top_ten_params:'
    backward_command = {'admin_backward:top_ten_display': captions['backward'], **to_statistic_panel}
    width = 1
    dynamic_buttons = 2

class ChooseCustomParamsToStats:
    buttons_callback_data = 'custom_demand_param:'
    backward_command = {'admin_backward:choose_custom_params': captions['backward'], **to_statistic_panel}
    output_top_button = {'output_current_demand_stats': '–í—ã–≤–µ—Å—Ç–∏ —Ç–µ–∫—É—â–∏–π —Ç–æ–ø'}
    width = 1
    dynamic_buttons = 2

    async def async_init(self, period, param_to_output, calculate_method, chosen_params=None):
        self.buttons_callback_data = self.buttons_callback_data
        self.width = self.width
        self.dynamic_buttons = self.dynamic_buttons if param_to_output == 'engine' else 3
        self.message_text = '{header}'

        if chosen_params:
            self.backward_command = {**self.output_top_button, **self.backward_command}
        else:
            self.backward_command = self.backward_command

        self.message_text += f'''–∑–∞ {copy(captions[period if period != 'all' else 'any'])};\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –º–µ—Å—Ç–æ –∏–∑ —Ç–æ–ø–∞;\n\
–°–ø–∏—Å–æ–∫ {'–ø–æ —É–±—ã–≤–∞–Ω–∏—é' if calculate_method == 'bottom' else '–ø–æ —É–≤–µ–ª–∏—á–µ–Ω–∏—é'} —Å–ø—Ä–æ—Å–∞;\
\n{advert_parameters_captions[param_to_output]}:'''

        return self