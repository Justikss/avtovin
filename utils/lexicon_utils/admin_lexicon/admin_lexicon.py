from config_data.config import block_user_reason_text_len

return_main_menu = {'return_main_menu': '–í –º–µ–Ω—é'}
captions = {'backward': '–ù–∞–∑–∞–¥', 'was_selected': '–í—ã –≤—ã–±—Ä–∞–ª–∏', 'cancel': '–û—Ç–º–µ–Ω–∏—Ç—å', 'confirm': '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
            'sales': '–ø—Ä–æ–¥–∞–∂–∞–º', 'purchases': '–ø–æ–∫—É–ø–∫–∞–º'}

__ADMIN_LEXICON = {
    'admin_panel_button_caption': 'üîë –ê–¥–º–∏–Ω –ü–∞–Ω–µ–ª—å',
    'user_havent_admin_permission': '–í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
    'users_category_non_exists': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.',
    'user_non_active': '–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–ª—å—à–µ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω',
    'success_set_tariff': '–¢–∞—Ä–∏—Ñ —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω!',
    'failed_set_tariff': '–¢–∞—Ä–∏—Ñ –Ω–µ –±—ã–ª –≤—ã–¥–∞–Ω, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.',
    'tariff_was_reset': '–¢–∞—Ä–∏—Ñ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω—É–ª—ë–Ω!',
    'action_non_actuality': '–î–µ–π—Å—Ç–≤–∏–µ –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω–æ',
    'user_block_success': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!',
    'incorrect_input_block_reason': f'''–í–∞—à–∞ –ø—Ä–∏—á–∏–Ω–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç {block_user_reason_text_len['min']} –¥–æ {block_user_reason_text_len['max']} —Å–∏–º–≤–æ–ª–æ–≤, –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ!\n–¢–µ–∫—É—â–∞—è –¥–ª–∏–Ω–∞ (–±–µ–∑ —É—á—ë—Ç–∞ –ø—Ä–æ–±–µ–ª–æ–≤):\n''',

    'start_admin_panel': {'message_text': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å.\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
                          'buttons': {'admin_button_users': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', 'admin_buttons_tariffs': '–¢–∞—Ä–∏—Ñ—ã',
                                      'admin_button_catalog': '–ö–∞—Ç–∞–ª–æ–≥', 'admin_button_advert': '–†–µ–∫–ª–∞–º–∞',
                                      'admin_button_bot_statistics': '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞',
                                      'admin_backward:admin_main_menu': '–í—ã—Ö–æ–¥',
                                      'width': 2}},

    'select_user_category': {'message_text': '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:',
                             'buttons': {'buyer_category_actions': '–ü–æ–∫—É–ø–∞—Ç–µ–ª–∏',
                                         'seller_category_actions': '–ü—Ä–æ–¥–∞–≤—Ü—ã',
                                         **return_main_menu,
                                         'width': 2}},

    'select_seller_category': {'message_text': '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–¥–∞–≤—Ü–æ–≤:',
                               'buttons': {'legal_seller_actions': '–°–∞–ª–æ–Ω—ã', 'natural_seller_actions': '–ß–∞—Å—Ç–Ω–∏–∫–∏',
                                           'admin_backward:choose_seller_category': '–ù–∞–∑–∞–¥',
                                           'width': 2}},

    'review_seller_card': {'message_header': '–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–¥–∞–≤—Ü–∞:',
                           'buttons': {'tariff_actions_by_admin': '–¢–∞—Ä–∏—Ñ', 'user_block_action_by_admin': '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞',
                                       'review_seller_statistics_by_admin': '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                                       'admin_backward:user_profile_review': captions['backward'],
                                       **return_main_menu, 'width': 2}},

    'review_buyer_card': {'message_text': '–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:\n<blockquote>–§–ò–û: {full_name}\n–¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã –Ω–æ–º–µ—Ä: {phone_number}</blockquote>',
                          'buttons': {'user_block_action_by_admin': '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞',
                                      'admin_backward:user_profile_review': captions['backward'],
                                      **return_main_menu, 'width': 1}},

    'reset_tariff_confirm_request': {'message_text': '\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ–±–Ω—É–ª–∏—Ç—å —Ç–∞—Ä–∏—Ñ –ø—Ä–æ–¥–∞–≤—Ü–∞ ?',
                                     'buttons': {'confirm_reset_seller_tariff_action': '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
                                                 'admin_backward:reset_seller_tariff': captions['cancel'],
                                                 'width': 1}},
    'final_decision_ban_user': {'message_text': '–ü—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É:\n{user_entity}\n–ü–æ –ø—Ä–∏—á–∏–Ω–µ:\n{reason}',
                                'confirm_block_user_by_admin': captions['confirm'],
                                'admin_backward:final_confirm_block_user': captions['backward'],
                                'admin_backward:review_result_profile_protocol': captions['cancel'],
                                'width': 1},

    'user_ban_notification': {
        'message_text': '–í–ù–ò–ú–ê–ù–ò–ï!\n–í–∞—à–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ {activity} –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–≤—Å–µ–≥–¥–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}',
    'buttons': {'close_ban_notification': '–°–∫—Ä—ã—Ç—å', 'width': 1}}

}

class BanUser:
    class InputReason:
        user_entities = {'dealership': '–∞–≤—Ç–æ—Å–∞–ª–æ–Ω–∞ {name}', 'seller': '—á–∞—Å—Ç–Ω–æ–≥–æ –ø—Ä–æ–¥–∞–≤—Ü–∞ {name}',
                         'buyer': '–ø–æ–∫—É–ø–∞—Ç–µ–ª—è {name}'}

        message_text_head = '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ {entity}:\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –ø—Ä–∏—á–∏–Ω—É:'
        width = 1
        buttons = {'admin_backward:input_ban_reason': captions['backward'], 'width': width}

        def __init__(self, user_entity, name):
            self.buttons = self.buttons

            self.user_entity = self.user_entities.get(user_entity)

            if self.user_entity:
                self.user_entity = self.user_entity.format(name=name)
                self.message_text = self.message_text_head.format(entity=self.user_entity)
                self.lexicon_part = {'message_text': self.message_text, 'buttons': {**self.buttons}}

class SelectTariff:
    message_text = {'exists': '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ\n–æ–±–Ω–æ–≤–∏—Ç—å —Ç–∞—Ä–∏—Ñ –Ω–∞ {tariff_name}', 'non_exists': '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ\n—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞—Ä–∏—Ñ {tariff_name}'}
    message_text_startswith = '–¢–∞—Ä–∏—Ñ –¥–ª—è {name}:\n'
    last_buttons = {'confirm_set_tariff_to_seller_by_admin': '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å'}
    backward_command = {'admin_backward:tariff_to_seller_pre_confirm_moment': captions['cancel']}
    width = 1

    def __init__(self, tariff_exists, tariff_name, seller_name):
        self.message_text_startswith = self.message_text_startswith.format(name=seller_name)
        self.message_text = self.message_text['exists'] if tariff_exists else self.message_text['non_exists']
        self.message_text = self.message_text_startswith + self.message_text.format(tariff_name=tariff_name)
        self.last_buttons = self.last_buttons
        self.backward_command = self.backward_command
        self.width = self.width
        self.lexicon_part = {'message_text': self.message_text, 'buttons': {**self.last_buttons,
                                                                            **self.backward_command,
                                                                            'width': self.width
                                                                            }
                             }

class ChooseTariff:
    buttons_callback_data = 'select_tariff_for_seller_by_admin:'
    message_text = '–¢–∞—Ä–∏—Ñ –¥–ª—è {name}\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ:'
    dynamic_buttons = 2
    width = 2
    backward_command = {'admin_backward:choose_tariff_for_seller': captions['backward'],
                    'admin_backward:review_seller_tariff': '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é'}
    last_buttons = None
    tariff_review_buttons = {'activate_tariff_by_admin_for_seller': '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å',
                             'admin_backward:tariff_for_seller_review': '–ù–∞–∑–∞–¥', 'width': 1}

class ReviewSellerTariff:
    message_header = {'legal': '–¢–∞—Ä–∏—Ñ —Å–∞–ª–æ–Ω–∞ {name}:',
                                                'natural': '–¢–∞—Ä–∏—Ñ —á–∞—Å—Ç–Ω–æ–≥–æ –ø—Ä–æ–¥–∞–≤—Ü–∞ {name}:'}
    set_tariff_button = {'set_seller_tariff_by_admin': '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞—Ä–∏—Ñ'}
    remove_tariff_buttons = {'reset_seller_tariff_by_admin': '–û–±–Ω—É–ª–∏—Ç—å —Ç–∞—Ä–∏—Ñ'}
    backward_buttons = {'admin_backward:review_seller_tariff': captions['backward']}
    tariff_not_exists = '<blockquote>–¢–∞—Ä–∏—Ñ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</blockquote>'

    def __init__(self, tariff_exists):
        self.message_header = self.message_header
        self.tariff_not_exists = self.tariff_not_exists
        if tariff_exists:
            self.width = 2
            self.buttons = {**self.set_tariff_button, **self.remove_tariff_buttons, **self.backward_buttons,
                            'width': self.width}
        else:
            self.width = 1
            self.buttons = {**self.set_tariff_button, **self.backward_buttons, 'width': self.width}

class UserList:
    buttons_callback_data = 'user_select_action:'
    search_by_name_button_caption = '–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏'
    search_by_name_callback_data_startswith = 'search_by_name'
    backward_command = {'admin_backward:user_list_to_admin': captions['backward'], **return_main_menu}
    message_text = '–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π:'
    width = 1
    dynamic_buttons = 2
    def __init__(self, user_status):
        self.dynamic_buttons = self.dynamic_buttons
        self.buttons_callback_data = self.buttons_callback_data
        self.search_by_name_button_caption = self.search_by_name_button_caption
        self.search_by_name_callback_data_startswith = self.search_by_name_callback_data_startswith
        self.backward_command = self.backward_command
        self.message_text = self.message_text
        self.search_by_name_button = \
            {f'{self.search_by_name_callback_data_startswith}_{user_status}': self.search_by_name_button_caption}
        self.last_buttons = {**self.search_by_name_button}
        self.width = self.width


class SellerList(UserList):
    buttons_callback_data = 'seller_select_action:'
    backward_command = {'admin_backward:seller_list_to_admin': '–ù–∞–∑–∞–¥'}

    class NaturalList:
        message_text = '–°–ø–∏—Å–æ–∫ —á–∞—Å—Ç–Ω—ã—Ö –ª–∏—Ü:'

    class DealershipList:
        message_text = '–°–ø–∏—Å–æ–∫ —Å–∞–ª–æ–Ω–æ–≤:'

    def __init__(self, seller_status):
        super().__init__(seller_status)
        self.message_text = self.NaturalList.message_text if seller_status == 'natural' \
                                                            else self.DealershipList.message_text
