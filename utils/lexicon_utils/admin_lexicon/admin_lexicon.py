import importlib

from config_data.config import max_feedbacks_len, max_contact_info_len
from utils.lexicon_utils.lexicon_uz.admin_lexicon_uz.admin_lexicon_uz import admin_class_mini_lexicon_uz
from utils.safe_dict_class import SafeDict, SmartGetattr

config_module = importlib.import_module('config_data.config')
admin_lexicon_uz_module = importlib.import_module('utils.lexicon_utils.lexicon_uz.admin_lexicon_uz.admin_lexicon_uz')
# block_user_reason_text_len = config_module.get('block_user_reason_text_len')
# block_user_reason_text_len = config_module.get('block_user_reason_text_len')

return_main_menu = {'return_main_menu': '–í –º–µ–Ω—é'}
_captions = {'backward': '‚óÇ –ù–∞–∑–∞–¥ ‚ñ∏', 'was_selected': '–í—ã –≤—ã–±—Ä–∞–ª–∏', 'cancel': '–û—Ç–º–µ–Ω–∏—Ç—å', 'confirm': '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
            'sales': '–ø—Ä–æ–¥–∞–∂–∞–º', 'purchases': '–ø–æ–∫—É–ø–∫–∞–º', 'any': '–≤—Å—ë –≤—Ä–µ–º—è', 'day': '–¥–µ–Ω—å', 'week': '–Ω–µ–¥–µ–ª—é',
            'month': '–º–µ—Å—è—Ü', 'year': '–≥–æ–¥', 'days': '–¥–Ω–µ–π', 'feedbacks': '–æ—Ç–∫–ª–∏–∫–æ–≤',
            'dont_write_html_tags': '–ó–∞–ø—Ä–µ—â—ë–Ω –≤–≤–æ–¥ –∑–Ω–∞–∫–æ–≤ "&lt; &gt;".',
            'all_users': '–≤—Å–µ—Ö', 'buyers': '–ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π', 'sellers': '–ø—Ä–æ–¥–∞–≤—Ü–æ–≤', 'delete': '–£–¥–∞–ª–∏—Ç—å',
            'by_dealership': '–∞–≤—Ç–æ—Å–∞–ª–æ–Ω–∞',
            'by_seller': '—á–∞—Å—Ç–Ω–æ–≥–æ –ª–∏—Ü–∞', 'close': '–°–∫—Ä—ã—Ç—å', 'surname_name_patronymic': '–§–ò–û: ', 'add': '–î–æ–±–∞–≤–∏—Ç—å',
            'successfully': '–£—Å–ø–µ—à–Ω–æ'
            }

low_sep = '‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ'


__ADMIN_LEXICON = {
    'banned_users_caption:true': '<i>–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö</i>',
    'banned_users_caption:false': '<i>–∞–∫—Ç–∏–≤–Ω—ã—Ö</i>',
    'banned_users_caption_parent_case:true': '<i>–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ</i>',
    'banned_users_caption_parent_case:false': '<i>–∞–∫—Ç–∏–≤–Ω–æ–≥–æ</i>',
    'choose_user_block_category': {'message_text': '<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>', 'buttons': {
        'user_block_status:true': '–í –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ', 'user_block_status:false': '–ê–∫—Ç–∏–≤–Ω—ã–µ',
        **return_main_menu,
        'width': 2
    }},
    'banned_user_endswith': {'message_text': low_sep + '\n<blockquote><b>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</b> <i>{date}</i>\n <b>–≤</b> <i>{time}</i>\n<b>–ü—Ä–∏—á–∏–Ω–∞:</b> <i>{reason}</i></blockquote>',
                             'buttons': {'unblock_user': '–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å'
    }},
    'unban_confirmation': {'message_text': '<b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É </b>\n<i>{user_entity}</i>',
                           'buttons': {'confirm_unban': _captions['confirm'],
                                       'admin_backward:unban_confirmation': _captions['backward'],
                                       'width': 1}},

    'inputted_user_not_is_admin': '–í–≤–µ–¥—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.',
    'user_has_not_been_blocked': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω',
    'inputted_admin_is_exists': '–£–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—Ç–æ–∏—Ç –Ω–∞ —Å–≤–æ–µ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏',
    'admin_help': {
            'message_text': '''<b>–¢–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—è:</b>
–ö—Ä–∞—Å–Ω—ã–π –∞–¥–º–∏–Ω - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤—ã—Å—à–µ–≥–æ —É—Ä–æ–≤–Ω—è.

–ö–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—Ä–∞—Å–Ω—ã–º –∞–¥–º–∏–Ω–∞–º:

/add @usermame - <i>–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞.</i> 

/radd  @usermame - <i>–î–æ–±–∞–≤–∏—Ç—å –∫—Ä–∞—Å–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞.</i> 

/del @usermame - <i>–°–Ω—è—Ç—å –∞–¥–º–∏–Ω–∞(–î–∞–∂–µ –∫—Ä–∞—Å–Ω–æ–≥–æ).</i>

/rdel  @usermame - <i>–ü–æ–Ω–∏–∑–∏—Ç—å –∫—Ä–∞—Å–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞ –¥–æ –æ–±—ã—á–Ω–æ–≥–æ</i>

–ö–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ª—é–±—ã–º –∞–¥–º–∏–Ω–∞–º:

/unban s @username - <i>–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å  –ø—Ä–æ–¥–∞–≤—Ü–∞</i>
/unban b @username - <i>–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å  –ø–æ–∫—É–ø–∞—Ç–µ–ª—è</i>
/unban @username - <i>–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å  –∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –∏ –ø—Ä–æ–¥–∞–≤—Ü–∞</i>

/alist - <i>–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤</i>''', 'buttons': {'check_banned_persons': '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                                               'return_main_menu': '–í –º–µ–Ω—é', 'width': 1}

        },
    'fullname_caption': '–§–ò–û',
    'dealership_name_caption': '–Ω–∞–∑–≤–∞–Ω–∏–µ',
    'user_entity_caption': '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
    'dealership_entity_caption': '–∞–≤—Ç–æ—Å–∞–ª–æ–Ω–∞',
    'user_id_not_found': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ –æ–Ω –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –±–æ—Ç–µ.',
    'close_admin_list': '–í –º–µ–Ω—é',
    'admin_list_header': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:\nUsername   –ö—Ä–∞—Å–Ω—ã–π —Å—Ç–∞—Ç—É—Å',
    'admin_list_part': '\n{username} | {red_status}',
    'successfully': '–£—Å–ø–µ—à–Ω–æ',
    'unsuccessfully': '–ù–µ—É—Å–ø–µ—à–Ω–æ',
    'admin_not_is_red': '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∫—Ä–∞—Å–Ω—ã–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º',
    'admin_panel_button_caption': 'üîë –ê–¥–º–∏–Ω –ü–∞–Ω–µ–ª—å',
    'user_havent_admin_permission': '–í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
    'users_category_non_exists': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.',
    'user_non_active': '–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω',
    'success_set_tariff': '–¢–∞—Ä–∏—Ñ —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω!',
    'failed_set_tariff': '–¢–∞—Ä–∏—Ñ –Ω–µ –±—ã–ª –≤—ã–¥–∞–Ω, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.',
    'tariff_was_reset': '–¢–∞—Ä–∏—Ñ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω—É–ª—ë–Ω!',
    'action_non_actuality': '–î–µ–π—Å—Ç–≤–∏–µ –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω–æ',
    'user_block_success': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!',
    'information_was_updated': '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞!',
    'success_input_tariff_data': '–£—Å–ø–µ—à–Ω–æ!\n–¢–∞—Ä–∏—Ñ {tariff_name} - —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!',
    'unsuccessfully_add_tariff': '–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–∞—Ä–∏—Ñ.',
    'tariff_has_bindings': '–î–∞–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ –Ω–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
    'tariff_was_successfully_removed': '–¢–∞—Ä–∏—Ñ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!',
    'tariff_was_inactive': '–î–∞–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω!',
    'successfully_edit_action': '–£—Å–ø–µ—à–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ!',
    'incorrect_input_block_reason': f'''<b>–í–∞—à–∞ –ø—Ä–∏—á–∏–Ω–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç {config_module.block_user_reason_text_len['min']} –¥–æ {config_module.block_user_reason_text_len['max']} —Å–∏–º–≤–æ–ª–æ–≤, –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ!</b>\n–¢–µ–∫—É—â–∞—è –¥–ª–∏–Ω–∞ (–±–µ–∑ —É—á—ë—Ç–∞ –ø—Ä–æ–±–µ–ª–æ–≤):\n''',

    'start_admin_panel': {'message_text': '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å.</b>\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
                          'buttons': {'admin_button_bot_statistics': '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìà', 'admin_button_users': 'üë®üèª‚Äçüíª –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
                                      'admin_button_tariffs': '–¢–∞—Ä–∏—Ñ—ã üí≥', 'admin_button_contacts': 'üìù –ö–æ–Ω—Ç–∞–∫—Ç—ã',
                                      'admin_button_catalog': '–ö–∞—Ç–∞–ª–æ–≥ üóÇ',
                                      'admin_button_advert': 'üóû –†–µ–∫–ª–∞–º–∞',
                                      'admin_backward:admin_main_menu': '–í—ã—Ö–æ–¥',
                                      'width': 2}},

    'select_user_category': {'message_text': '<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {block_state} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>',
                             'buttons': {'buyer_category_actions': '–ü–æ–∫—É–ø–∞—Ç–µ–ª–∏ üë®üèª‚Äçüíª',
                                         'seller_category_actions': 'üë®üèª‚Äçüíº –ü—Ä–æ–¥–∞–≤—Ü—ã',
                                         'admin_backward:choose_user_entity': _captions['backward'],
                                         **return_main_menu,
                                         'width': 2}},

    'select_seller_category': {'message_text': '<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {block_state} –ø—Ä–æ–¥–∞–≤—Ü–æ–≤:</b>',
                               'buttons': {'legal_seller_actions': '–°–∞–ª–æ–Ω—ã üöò', 'natural_seller_actions': 'üë®üèª‚Äçüíº –ß–∞—Å—Ç–Ω–∏–∫–∏',
                                           'admin_backward:choose_seller_category': '‚óÇ –ù–∞–∑–∞–¥ ‚ñ∏',
                                           'width': 2}},

    'review_seller_card': {'message_header': '<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥–∞–≤—Ü–µ:</b>',
                           'buttons': {'tariff_actions_by_admin': '–¢–∞—Ä–∏—Ñ', 'user_block_action_by_admin': '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞',
                                       'select_seller_statistic_period': '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                                       'admin_backward:user_profile_review': _captions['backward'],
                                       **return_main_menu, 'width': 2}},

    'review_buyer_card': {'message_text': '<b>–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:</b>\n<blockquote>–§–ò–û: {full_name}\n–¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä: {phone_number}</blockquote>',
                          'buttons': {'user_block_action_by_admin': '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞',
                                      'admin_backward:user_profile_review': _captions['backward'],
                                      **return_main_menu, 'width': 1}},

    'reset_tariff_confirm_request': {'message_text': '\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ–±–Ω—É–ª–∏—Ç—å —Ç–∞—Ä–∏—Ñ –ø—Ä–æ–¥–∞–≤—Ü–∞ ?',
                                     'buttons': {'confirm_reset_seller_tariff_action': '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
                                                 'admin_backward:reset_seller_tariff': _captions['cancel'],
                                                 'width': 1}},
    'final_decision_ban_user': {'message_text': '<b>–ü—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É:</b>\n{user_entity}\n<b>–ü–æ –ø—Ä–∏—á–∏–Ω–µ:</b>\n{reason}',
                                'confirm_block_user_by_admin': _captions['confirm'],
                                'admin_backward:final_confirm_block_user': _captions['backward'],
                                'admin_backward:review_result_profile_protocol': _captions['cancel'],
                                'width': 1},

    'user_ban_notification': {
        'message_text': '–í–ù–ò–ú–ê–ù–ò–ï!\n–í–∞—à–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ {activity} –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–≤—Å–µ–≥–¥–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}',
    'buttons': {'close_ban_notification': _captions['close'], 'width': 1}},

    'input_name_to_search_process': {'message_text': '<b>–í–≤–µ–¥–∏—Ç–µ {name_caption} –∂–µ–ª–∞–µ–º–æ–≥–æ {block_state} {user_entity}:</b>',
                                     'buttons': {'admin_backward:input_name_to_search': _captions['backward'],
                                                 'width': 1}},

    'input_name_to_search_process(novalid)': f'''<b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –§–ò–û!</b>\n–ò–º—è {'{block_state}'} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å 2-3 —Å–ª–æ–≤–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–§–ò–û" –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤ —Å–µ–±–µ –Ω–µ –±–æ–ª–µ–µ {config_module.max_contact_info_len} –±—É–∫–≤.''',
    'input_name_to_search_process(novalid)dealership': f'<b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!</b>\n–ù–∞–∑–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–ª–∏–Ω–Ω–æ–π –º–µ–Ω–µ–µ {config_module.max_contact_info_len} —Å–∏–º–≤–æ–ª–æ–≤\n–ò —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä: ',
    'input_name_to_search_process(non_exists)': '<b>{block_state} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º - –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</b>',

    'add_tariff_sub_text': '<b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞</b>\n',
    'rewrite_tariff_sub_text': '<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞</b>\n',
    'input_tariff_cost': {'message_text': '–£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å:',
                          'buttons': {'admin_backward:input_tariff_cost': _captions['backward'], 'width': 1}},
    'input_tariff_cost(incorrect)': f'<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –æ–¥–Ω–æ–≥–æ —á–∏—Å–ª–∞(–¥–æ {config_module.max_price_len} —Ü–∏—Ñ—Ä)</b>\n–í–æ–∑–º–æ–∂–µ–Ω –≤–≤–æ–¥ —Å–æ –∑–Ω–∞–∫–æ–º " $ "',

    'input_tariff_feedbacks': {'message_text': '–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫–ª–∏–∫–æ–≤:',
                               'buttons': {'admin_backward:input_tariff_feedbacks': _captions['backward'], 'width': 1}},
    'input_tariff_feedbacks(incorrect)': f'<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫–ª–∏–∫–æ–≤ –¥–æ–ª–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞, –¥–ª–∏–Ω–æ–π –æ—Ç 0 –¥–æ {max_feedbacks_len} —Ü–∏—Ñ—Ä.</b>',

    'input_tariff_time_duration': {
        'message_text': '–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–∏\n–í —Ñ–æ—Ä–º–∞—Ç–µ: –ª–µ—Ç:–º–µ—Å—è—Ü–µ–≤:–¥–Ω–µ–π\n–ü—Ä–∏–º–µ—Ä (6 –º–µ—Å—è—Ü–µ–≤ –∏ 15 –¥–Ω–µ–π): 0:6:15',
        'buttons': {'admin_backward:input_tariff_duration_time': _captions['backward'],
                    'width': 1}},
    'input_tariff_time_duration(incorrect)': '<b>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–∏ —Ç–∞—Ä–∏—Ñ–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞ –∏ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ä–∞–∑—É–º–Ω–æ–≥–æ –∏ –≤–≤–æ–¥–∏—Ç—å—Å—è —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –ª–µ—Ç:–º–µ—Å—è—Ü–µ–≤:–¥–Ω–µ–π</b>',

    'input_tariff_name': {'message_text': '<b>–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:</b>',
                          'buttons': {'admin_backward:input_tariff_name': _captions['backward'], 'width': 1}},
    'input_tariff_name(match)': f'''<b>–î–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç —É –¥—Ä—É–≥–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞</b>\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:''',
    'input_tariff_name(len)': f'''<b>–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É –Ω–∞–∑–≤–∞–Ω–∏—è - {max_contact_info_len}.</b>\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:''',

    'tariff_view_buttons': {'edit_tariff_by_admin': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', 'delete_tariff_by_admin': _captions['delete'],
                            'admin_backward:check_tariff_info': _captions['backward'], 'width': 2},

    'tariff_delete_confirm_action': {'message_text': '<b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞:</b>',
                                     'buttons': {'confirm_delete_tariff_by_admin': _captions['delete'],
                                                 'admin_backward:confirm_delete_tariff_action': '–û—Ç–º–µ–Ω–∏—Ç—å', 'width': 1}},

    'start_tariff_edit_action': {'message_text': '<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</b>',
                                 'buttons': ('edit_tariff_name', 'edit_tariff_duration_time',
                                             'edit_tariff_feedbacks_residual', 'edit_tariff_cost',
                                             {'admin_backward:edit_tariff': _captions['backward'],
                                              'confirm_tariff_edit': _captions['confirm'],
                                              'width': 1})}




}
pagination_interface = {'admin_pagination:-': '‚Üê', 'page_counter': '[{start}/{end}]', 'admin_pagination:+': '‚Üí'}

safe_dict_module = importlib.import_module('utils.safe_dict_class')
captions = safe_dict_module.SafeDict({'ru': _captions,
                     'uz': admin_lexicon_uz_module.captions_uz})

admin_class_mini_lexicon_ru = {
    'search_by_dealership_name_caption': '–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é',
    'tariff_non_exists_plug_name': '–¢–∞—Ä–∏—Ñ–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ',
    'all_tariffs_output_message_text': '<b>–°–ø–∏—Å–æ–∫ —Ç–∞—Ä–∏—Ñ–æ–≤:</b>',
    'ban_user_input_reason_dealership': '–∞–≤—Ç–æ—Å–∞–ª–æ–Ω–∞ {name}',
    'ban_user_input_reason_seller': '—á–∞—Å—Ç–Ω–æ–≥–æ –ø—Ä–æ–¥–∞–≤—Ü–∞ {name}',
    'ban_user_input_reason_buyer': '–ø–æ–∫—É–ø–∞—Ç–µ–ª—è {name}',
    'ban_user_message_text_head': '<b>–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ {entity}</b>:\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –ø—Ä–∏—á–∏–Ω—É:',
    'select_tariff_message_text_exists': '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ\n–æ–±–Ω–æ–≤–∏—Ç—å —Ç–∞—Ä–∏—Ñ –Ω–∞ {tariff_name}',
    'select_tariff_message_text_non_exists': '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ\n—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞—Ä–∏—Ñ {tariff_name}',
    'select_tariff_message_text_startswith': '<b>–¢–∞—Ä–∏—Ñ –¥–ª—è {name}:</b>\n',
    'choose_tariff_message_text': '<b>–¢–∞—Ä–∏—Ñ –¥–ª—è {name}</b>\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ:',
    'review_seller_tariff_message_header_legal': '<b>–¢–∞—Ä–∏—Ñ —Å–∞–ª–æ–Ω–∞ {name}:</b>',
    'review_seller_tariff_message_header_natural': '<b>–¢–∞—Ä–∏—Ñ —á–∞—Å—Ç–Ω–æ–≥–æ –ø—Ä–æ–¥–∞–≤—Ü–∞ {name}:</b>',
    'tariff_not_exists': '<blockquote>–¢–∞—Ä–∏—Ñ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</blockquote>',
    'user_list_message_text': '<b>–°–ø–∏—Å–æ–∫ {block_status} –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π:</b>',
    'natural_list_message_text': '<b>–°–ø–∏—Å–æ–∫ {block_status} —á–∞—Å—Ç–Ω—ã—Ö –ª–∏—Ü:</b>',
    'dealership_list_message_text': '<b>–°–ø–∏—Å–æ–∫ {block_status} —Å–∞–ª–æ–Ω–æ–≤:</b>',

    'return_to_user': '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é',
    'set': '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å',
    'set_tariff': '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞—Ä–∏—Ñ',
    'remove_tariff': '–û–±–Ω—É–ª–∏—Ç—å —Ç–∞—Ä–∏—Ñ',
    'search_by_name': '–ü–æ–∏—Å–∫ –ø–æ –§–ò–û',
    'return_main_menu': '–í –º–µ–Ω—é'
}



# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —É–∑–±–µ–∫—Å–∫–∏–π —Å–ª–æ–≤–∞—Ä—å


admin_class_mini_lexicon = SafeDict({'ru': admin_class_mini_lexicon_ru,
                                     'uz': admin_class_mini_lexicon_uz})



class TariffNonExistsPlug(SmartGetattr):
    def __init__(self):
        super().__init__()

        self.id = 'None'
        self.name = admin_class_mini_lexicon['tariff_non_exists_plug_name']  # –î–ª—è —Ä—É—Å—Å–∫–æ–π –≤–µ—Ä—Å–∏–∏, –¥–ª—è —É–∑–±–µ–∫—Å–∫–æ–π –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ lexicon_uz

class AllTariffsOutput(SmartGetattr):
    def __init__(self):
        super().__init__()

        self.message_text = admin_class_mini_lexicon['all_tariffs_output_message_text']
        self.buttons_callback_data = 'admin_select_tariff:'
        self.width = 1
        self.dynamic_buttons = 2
        self.last_buttons = None
        self.backward_command = {'add_tariff_by_admin': captions['add'],
                                 'return_main_menu': admin_class_mini_lexicon['return_main_menu']}

class BanUser:
    class InputReason:#(SmartGetattr):
        def __init__(self, user_entity, name):
            #super().__init__()

            self.user_entities = {
                    'dealership': admin_class_mini_lexicon['ban_user_input_reason_dealership'],
                    'seller': admin_class_mini_lexicon['ban_user_input_reason_seller'],
                    'buyer': admin_class_mini_lexicon['ban_user_input_reason_buyer']
                }
            self.message_text_head = admin_class_mini_lexicon['ban_user_message_text_head']
            self.width = 1
            self.buttons = {'admin_backward:input_ban_reason': captions['backward'], 'width': self.width}

            self.user_entity = self.user_entities.get(user_entity)

            if self.user_entity:
                self.user_entity = self.user_entity.format(name=name)
                self.message_text = self.message_text_head.format(entity=self.user_entity)
                self.lexicon_part = {'message_text': self.message_text, 'buttons': {**self.buttons}}


class SelectTariff:#(SmartGetattr):
    def __init__(self, tariff_exists, tariff_name, seller_name):
        #super().__init__()

        self.message_text = {
        'exists': admin_class_mini_lexicon['select_tariff_message_text_exists'],
        'non_exists': admin_class_mini_lexicon['select_tariff_message_text_non_exists']
        }
        self.message_text_startswith = admin_class_mini_lexicon['select_tariff_message_text_startswith']
        self.last_buttons = {'confirm_set_tariff_to_seller_by_admin': captions['confirm']}
        self.backward_command = {'admin_backward:tariff_to_seller_pre_confirm_moment': captions['cancel']}
        self.width = 1

        self.message_text_startswith = self.message_text_startswith.format(name=seller_name)
        self.message_text = self.message_text['exists'] if tariff_exists else self.message_text['non_exists']
        self.message_text = self.message_text_startswith + self.message_text.format(tariff_name=tariff_name)
        self.last_buttons = self.last_buttons
        self.backward_command = self.backward_command
        self.width = self.width
        self.lexicon_part = {'message_text': self.message_text, 'buttons': {**self.last_buttons,
                                                                            **self.backward_command,
                                                                            'width': self.width
                                                                            }
                             }

class ChooseTariff:#(SmartGetattr):
    def __init__(self):
        super().__init__()

        self.buttons_callback_data = 'select_tariff_for_seller_by_admin:'
        self.message_text = admin_class_mini_lexicon['choose_tariff_message_text']  # –ò–ª–∏ lexicon_uz –¥–ª—è —É–∑–±–µ–∫—Å–∫–æ–π –≤–µ—Ä—Å–∏–∏
        self.dynamic_buttons = 2
        self.width = 2
        self.backward_command = {'admin_backward:choose_tariff_for_seller': captions['backward'],
                                'admin_backward:review_seller_tariff': admin_class_mini_lexicon['return_to_user']}
        self.last_buttons = None
        self.tariff_review_buttons = {'activate_tariff_by_admin_for_seller': admin_class_mini_lexicon['set'],
                                'admin_backward:tariff_for_seller_review': captions['backward'], 'width': 1}

class ReviewSellerTariff:#(SmartGetattr):
    def __init__(self, tariff_exists):
        #super().__init__()

        self.message_header = {
            'legal': admin_class_mini_lexicon['review_seller_tariff_message_header_legal'],
            'natural': admin_class_mini_lexicon['review_seller_tariff_message_header_natural']
        }
        self.set_tariff_button = {'set_seller_tariff_by_admin': admin_class_mini_lexicon['set_tariff']}
        self.remove_tariff_buttons = {'reset_seller_tariff_by_admin': admin_class_mini_lexicon['remove_tariff']}
        self.backward_buttons = {'admin_backward:review_seller_tariff': captions['backward']}
        self.tariff_not_exists = admin_class_mini_lexicon['tariff_not_exists']

        if tariff_exists:
            self.width = 2
            self.buttons = {**self.set_tariff_button, **self.remove_tariff_buttons, **self.backward_buttons,
                            'width': self.width}
        else:
            self.width = 1
            self.buttons = {**self.set_tariff_button, **self.backward_buttons, 'width': self.width}

class UserList:#(SmartGetattr):
    def __init__(self, user_status, block_status):
        #super().__init__()

        self.buttons_callback_data = 'user_select_action:'

        self.search_by_name_button_caption = admin_class_mini_lexicon['search_by_name']
        self.search_by_name_callback_data_startswith = 'from_admin_search_by_name'
        self.backward_command = {'admin_backward:user_list_to_admin': captions['backward'],
                                 'return_main_menu': admin_class_mini_lexicon['return_main_menu']}
        self.message_text = admin_class_mini_lexicon['user_list_message_text'].format(block_status=block_status)
        self.width = 1
        self.dynamic_buttons = 2
        self.search_by_name_button = {f'{self.search_by_name_callback_data_startswith}{user_status}': self.search_by_name_button_caption}
        self.last_buttons = {**self.search_by_name_button}

class SellerList(UserList):
    def __init__(self, user_status, block_status):
        super().__init__(user_status, block_status)
        # self.message_text = admin_class_mini_lexicon['natural_list_message_text']
        self.buttons_callback_data = 'seller_select_action:'
        self.backward_command = {'admin_backward:seller_list_to_admin': captions['backward']}

class NaturalList(SellerList):
    def __init__(self, user_status, block_status):
        super().__init__(user_status, block_status)
        self.message_text = admin_class_mini_lexicon['natural_list_message_text'].format(block_status=block_status)

# NaturalList = NaturalList()
TariffNonExistsPlug = TariffNonExistsPlug()
AllTariffsOutput = AllTariffsOutput()
# ChooseTariff = ChooseTariff()

class DealershipList(SellerList):
    def __init__(self, seller_status, block_status):
        super().__init__(seller_status, block_status)
        self.message_text = admin_class_mini_lexicon['dealership_list_message_text'].format(block_status=block_status)
        self.message_text = NaturalList.message_text if seller_status == 'natural' \
            else self.message_text
        self.last_buttons = {f'{self.search_by_name_callback_data_startswith}{seller_status}': admin_class_mini_lexicon['search_by_dealership_name_caption']}


